#include<cstdio>
#include<queue>
#include<cmath>
#include<vector>
#include<climits>
#include<cstring> 
#include<algorithm>
#include<iostream>
using namespace std;

struct mat
{
	bool f[7][5];
}s[25];

int x[12], sp, cnt, maxl;
long long a, b;
char c;

bool m[10][7][5] ={
			{{1,1,1,1,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1}},

			{{0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1}},

			{{1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {1,1,1,1,1},
			 {1,0,0,0,0},
			 {1,0,0,0,0},
			 {1,1,1,1,1}},

			{{1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {1,1,1,1,1}},

			{{1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1}},

			{{1,1,1,1,1},
			 {1,0,0,0,0},
			 {1,0,0,0,0},
			 {1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {1,1,1,1,1}},

			{{1,1,1,1,1},
			 {1,0,0,0,0},
			 {1,0,0,0,0},
			 {1,1,1,1,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1}},

			{{1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1}},

			{{1,1,1,1,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1}},

			{{1,1,1,1,1},
			 {1,0,0,0,1},
			 {1,0,0,0,1},
			 {1,1,1,1,1},
			 {0,0,0,0,1},
			 {0,0,0,0,1},
			 {1,1,1,1,1}}};

void calc(long long &x, int l, int r)
{
	x = 0;
	int d;
	for(int i = l; i <= r; i++)
	{
		if((!s[i].f[4][1]) && s[i].f[4][5])
			if(s[i].f[1][1]) d = 7; else d = 1;
		else if(!s[i].f[7][1]) d = 4;
		else if(!s[i].f[3][1])
			if(s[i].f[5][1]) d = 2; else d = 3;
		else if(!s[i].f[3][5])
			if(!s[i].f[5][1]) d = 5; else d = 6;
		else if(!s[i].f[4][3]) d = 0;
		else if(s[i].f[5][1]) d = 8; else d = 9;
		x = x * 10 + d;
	}
}

int main()
{
	ios::sync_with_stdio(false);
	while (1)
	{
		maxl = 0;
		for(int r = 1; r <= 7; r++)
		{
			if(r == 2) maxl = cnt;
			cnt = 0;
			while (1)
			{
				cnt++;
				for(int i = 1; i <= 5; i++)
				{
					c = cin.get();
					if((c != 'x') && (c != '.')) return 0;
					s[cnt].f[r][i] = (c == 'x');
				}
				char e = cin.get();
				if((r == 1) && (e == '\n')) break;
				if((r >= 2) && (cnt == maxl)) break;
			}
		}
		for(int i = 1; i <= cnt; i++) if(s[i].f[2][3]) sp = i;
		calc(a, 1, sp - 1);
		calc(b, sp + 1, cnt);
		a += b;
		cnt = 0;
		if(a == 0) x[++cnt] = 0;
		while(a)
		{
			x[++cnt] = a % 10;
			a /= 10;
		}
		for(int r = 0; r < 7; r++)
		{
			for(int i = cnt; i >= 1; i--)
			{
				for(int j = 0; j < 5; j++)
					if(m[x[i]][r][j]) cout << 'x'; else cout << '.';
				if(i > 1) cout << '.'; else cout << endl;
			}
		}
	}
	return 0;
}
